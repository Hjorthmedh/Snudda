#!/bin/bash -l
#SBATCH --partition=main
#SBATCH -o log/runSnudda-%j-output.txt
#SBATCH -e log/runSnudda-%j-error.txt
#SBATCH -t 00:30:00
#SBATCH -J Snudda
#SBATCH -A snic2022-5-245
#SBATCH --nodes=2
#SBATCH --tasks-per-node=128
#SBATCH --mem-per-cpu=937

module load snic-env

# Do we need this??
export OMP_NUM_THREADS=1

let NWORKERS="$SLURM_NTASKS-1"
export IPNWORKERS=$NWORKERS

# This is important, otherwise Snudda import will fail
unset DISPLAY


export IPYTHONDIR="/cfs/klemming/scratch/${USER:0:1}/$USER/.ipython"
rm -r $IPYTHONDIR
export IPYTHON_PROFILE=default
source $HOME/Snudda/snudda_env/bin/activate


#.. Start the ipcontroller
srun -n 1 --exact --overlap ./ipcontroller_new.sh &


echo ">>> waiting 30s for controller to start"
sleep 30 

##.. Start the engines
echo ">>> starting ${IPNWORKERS} engines "
srun -n ${IPNWORKERS} --exact --overlap ipengine --location=${CONTROLLERIP} --profile=${IPYTHON_PROFILE} --mpi \
--ipython-dir=${IPYTHONDIR}  --timeout=30.0 --log-level=DEBUG \
--BaseParallelApplication.verbose_crash=True --IPEngine.verbose_crash=True \
--Kernel.stop_on_error_timeout=1.0 --IPythonKernel.stop_on_error_timeout=1.0 \
Session.buffer_threshold=4096 Session.copy_threshold=250000 \
Session.digest_history_size=250000 c.EngineFactory.max_heartbeat_misses=10  c.MPI.use='mpi4py' \
1> ipe_${SLURM_JOBID}.out 2> ipe_${SLURM_JOBID}.err &


echo ">>> waiting 60s for engines to start"
sleep 30


#.. This is where you run your python script that utilizes the ipyparallel network
echo ">>>  GO GO SNUDDA <<<"

srun -n 1 --exact --overlap ./Dardel_runSnudda.sh

echo ">>> Done <<<"

wait

