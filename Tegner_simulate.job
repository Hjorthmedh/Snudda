#!/bin/bash -l
#SBATCH -t 7:59:00
#SBATCH --time-min=0:59:00
#SBATCH -J NeuronSimulate
#SBATCH -A 2019-3-304
#SBATCH -o save/output-Network_simulate.o%j
#SBATCH -e save/error-Network_simulate.e%j
#SBATCH --nodes=4
#SBATCH --ntasks-per-node=24

# 16 workers were too few, got section stack overflow (there is a hidden
# push to the stack somewhere in the neuron code)
let N_WORKERS="$SLURM_NNODES * 32"


module swap PrgEnv-cray PrgEnv-gnu
module load craype-haswell
module unload cray-libsci atp
#module load neuron/7.4-py27
module load neuron/7.5-py36


export CRAYPE_LINK_TYPE=dynamic
export CRAY_ROOTFS=DSL

#/pdc/vol/neuron/7.4-py27/x86_64/bin/nrnivmodl
/pdc/vol/neuron/7.5-py36/x86_64/bin/nrnivmodl

# Synapse file
#NETWORK_INFO_FILE=save/network-connect-synapse-file-2001927.hdf5
#NETWORK_INFO_FILE=last
NETWORK_INFO_FILE=BeskowMini2160/network-pruned-synapses.hdf5

NETWORK_INPUT_FILE=BeskowMini2160/input-spikes.hdf5

# Split the config file (is aprun blocking?)
# aprun -n 1 python3 SplitConnectionFile.py $NETWORK_INFO_FILE $N_WORKERS

# Make Network_input aware of if it receives a HDF5 file with all info
# or separate files
# aprun -n 1 python3 Network_input.py 

#aprun -n $N_WORKERS /cfs/klemming/nobackup/h/hjorth/StriatumNetwork/model/x86_64/special -mpi -python3 Network_simulate.py $NETWORK_INFO_FILE $NETWORK_INPUT_FILE
aprun -n $N_WORKERS /cfs/klemming/nobackup/h/hjorth/StriatumNetwork/model/x86_64/special -mpi -python Network_simulate.py $NETWORK_INFO_FILE $NETWORK_INPUT_FILE



# Original version, start neuron from python, does not work on beskow
#aprun -n  $N_WORKERS /cfs/klemming/nobackup/h/hjorth/ChINopt/model/x86_64/special -mpi -python Network_simulate.py /cfs/klemming/nobackup/h/hjorth/ChINopt/model/save/save/network-connect-synapse-file-1749867.pickle
